{"mappings":"AAuBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAhCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MACEC,UAAYb,MAAOc,EAAUC,KAAEA,EAAIC,OAAEA,IACnCL,EAAEM,cAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,GAAK,EAAG,CACxC,IAAInB,EAAWmB,EAAI,EACflB,EAAQoB,OAAON,EAAWK,OAASC,OAAOL,EAAKI,OAASD,EAC5DpB,EAAcC,EAAUC,GACrBqB,MAAKC,IACJC,QAAQC,IAAIF,EAAO,IAEpBG,OAAMH,IACLC,QAAQC,IAAIF,EAAO,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay: firstDelay, step, amount },\n  } = e.currentTarget;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    let position = i + 1;\n    let delay = Number(firstDelay.value) + Number(step.value) * i;\n    createPromise(position, delay)\n      .then(result => {\n        console.log(result);\n      })\n      .catch(result => {\n        console.log(result);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","firstDelay","step","amount","currentTarget","i","value","Number","then","result","console","log","catch"],"version":3,"file":"03-promises.b89ac04c.js.map"}